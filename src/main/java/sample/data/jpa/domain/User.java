package sample.data.jpa.domain;
// Imports ...

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

@Entity
@Table
public class User {

	// An autogenerated id (unique for each user in the db)
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column
	private long id;

	@Column
	@NotNull
	private String email;

	@Column
	@NotNull
	private String name;

	@Column
	@NotNull
	private String password;

	@OneToMany(targetEntity = Appointment.class, fetch = FetchType.LAZY, cascade = CascadeType.ALL)
	private List<Appointment> appointments = new ArrayList<Appointment>();

	// Public methods

	public User() {
	}

	public User(long id) {
		this.id = id;
	}

	public User(String email, String name, String password) {
		this(email, name, password, new ArrayList<Appointment>());
	}

	public User(String email, String name, String password, List<Appointment> appointments) {
		this.email = email;
		this.name = name;
		this.password = password;
		this.appointments = appointments;
	}

	public long getId() {
		return id;
	}

	public void setId(long id) {
		this.id = id;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public List<Appointment> getAppointments() {
		return appointments;
	}

	public void setAppointments(List<Appointment> appointments) {
		this.appointments = appointments;
	}

	@Override
	public String toString() {
		String str = "User [id=" + id + ", name=" + name + ", email=" + email + ", password=" + password
				+ ", appointments={";
		for (Appointment appointment : appointments) {
			str += appointment.getId() + ",";
		}
		str += "}]";
		return str;
	}
}